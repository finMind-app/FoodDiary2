#!/bin/bash

# Bash —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—É—à–∞ –≤ feature –≤–µ—Ç–∫—É —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–ø—É—Å–∫–æ–º CI/CD
# –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ macOS/Linux –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

echo "üöÄ –ü—É—à –≤ feature –≤–µ—Ç–∫—É —Å –∑–∞–ø—É—Å–∫–æ–º CI/CD..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É —Å–∫—Ä–∏–ø—Ç–∞
cd "$(dirname "$0")"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
if [ ! -d ".git" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –ü–∞–ø–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
CURRENT_BRANCH=$(git branch --show-current)
echo "üìç –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $CURRENT_BRANCH"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ feature –≤–µ—Ç–∫–µ
if [[ ! "$CURRENT_BRANCH" =~ ^feature/ ]]; then
    echo "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –í—ã –Ω–µ –≤ feature –≤–µ—Ç–∫–µ!"
    echo "üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –≤–µ—Ç–∫–µ feature/your-feature-name"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " response
    if [[ ! "$response" =~ ^[Yy]$ ]]; then
        echo "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å git
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
git_status=$(git status --porcelain)

if [ -z "$git_status" ]; then
    echo "‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
else
    echo "üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è:"
    echo "$git_status"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    echo "üì¶ –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
    git add -A
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
    read -p "üí¨ –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞: " commit_message
    if [ -z "$commit_message" ]; then
        commit_message="feat: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç $(date '+%Y-%m-%d %H:%M')"
    fi
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
    echo "üíæ –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç..."
    git commit -m "$commit_message"
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–º–∏—Ç–∞"
        exit 1
    fi
fi

# –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
echo "üì• –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
git fetch origin

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≤–µ—Ç–∫–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
if git rev-parse --verify "origin/$CURRENT_BRANCH" >/dev/null 2>&1; then
    echo "üîÑ –í–µ—Ç–∫–∞ $CURRENT_BRANCH —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–∞–∑–ª–∏—á–∏—è
    LOCAL_COMMIT=$(git rev-parse HEAD)
    REMOTE_COMMIT=$(git rev-parse "origin/$CURRENT_BRANCH")
    
    if [ "$LOCAL_COMMIT" != "$REMOTE_COMMIT" ]; then
        echo "‚ö†Ô∏è  –õ–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ç–∫–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —É–¥–∞–ª–µ–Ω–Ω–æ–π"
        echo "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º rebase..."
        git rebase "origin/$CURRENT_BRANCH"
        
        if [ $? -ne 0 ]; then
            echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ rebase. –†–∞–∑—Ä–µ—à–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤—Ä—É—á–Ω—É—é"
            exit 1
        fi
    fi
else
    echo "üÜï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ç–∫—É –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏"
fi

# –ü—É—à–∏–º –≤ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
echo "üöÄ –ü—É—à–∏–º –≤ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
if git rev-parse --verify "origin/$CURRENT_BRANCH" >/dev/null 2>&1; then
    git push origin "$CURRENT_BRANCH"
else
    git push -u origin "$CURRENT_BRANCH"
fi

if [ $? -eq 0 ]; then
    echo "‚úÖ –ü—É—à –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É—à–µ"
    exit 1
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º CI/CD –ø–∞–π–ø–ª–∞–π–Ω (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
echo "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º CI/CD –ø–∞–π–ø–ª–∞–π–Ω..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ GitHub Actions
if [ -d ".github/workflows" ]; then
    echo "üìã –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã GitHub Actions workflows"
    
    # –ü–æ–ª—É—á–∞–µ–º URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    remote_url=$(git remote get-url origin)
    if [[ "$remote_url" =~ github\.com[:/]([^/]+)/([^/]+?)(?:\.git)?$ ]]; then
        owner="${BASH_REMATCH[1]}"
        repo="${BASH_REMATCH[2]}"
        workflow_url="https://github.com/$owner/$repo/actions"
        
        echo "üîó –û—Ç–∫—Ä—ã–≤–∞–µ–º GitHub Actions: $workflow_url"
        if command -v open >/dev/null 2>&1; then
            open "$workflow_url"
        elif command -v xdg-open >/dev/null 2>&1; then
            xdg-open "$workflow_url"
        else
            echo "üí° –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: $workflow_url"
        fi
    fi
else
    echo "‚ö†Ô∏è  GitHub Actions –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥—Ä—É–≥–∏–µ CI/CD —Å–∏—Å—Ç–µ–º—ã
if [ -f "azure-pipelines.yml" ]; then
    echo "üîµ –û–±–Ω–∞—Ä—É–∂–µ–Ω Azure DevOps pipeline"
fi

if [ -f ".gitlab-ci.yml" ]; then
    echo "ü¶ä –û–±–Ω–∞—Ä—É–∂–µ–Ω GitLab CI"
fi

if [ -f "Jenkinsfile" ]; then
    echo "üîß –û–±–Ω–∞—Ä—É–∂–µ–Ω Jenkins pipeline"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ç–∫–µ
echo ""
echo "üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ç–∫–µ:"
echo "   –í–µ—Ç–∫–∞: $CURRENT_BRANCH"
echo "   –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: $(git log -1 --pretty=format:'%h - %s (%cr)')"
echo "   –ê–≤—Ç–æ—Ä: $(git log -1 --pretty=format:'%an <%ae>')"

echo ""
echo "üéâ –ì–æ—Ç–æ–≤–æ! –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ feature –≤–µ—Ç–∫—É –∏ CI/CD –∑–∞–ø—É—â–µ–Ω"
echo "üí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–∞–π–ø–ª–∞–π–Ω–∞ –≤ GitHub Actions"
echo "   2. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ —Å–æ–∑–¥–∞–π—Ç–µ Pull Request"
echo "   3. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ code review"
echo "   4. –ü–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ merge –≤ main –≤–µ—Ç–∫—É"
