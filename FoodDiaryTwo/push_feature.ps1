# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—É—à–∞ –≤ feature –≤–µ—Ç–∫—É —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞–ø—É—Å–∫–æ–º CI/CD
# –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Windows –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π

Write-Host "üöÄ –ü—É—à –≤ feature –≤–µ—Ç–∫—É —Å –∑–∞–ø—É—Å–∫–æ–º CI/CD..." -ForegroundColor Green

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É —Å–∫—Ä–∏–ø—Ç–∞
Set-Location $PSScriptRoot

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
if (-not (Test-Path ".git")) {
    Write-Host "‚ùå –û—à–∏–±–∫–∞: –ü–∞–ø–∫–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º" -ForegroundColor Red
    exit 1
}

# –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏
$CURRENT_BRANCH = git branch --show-current
Write-Host "üìç –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $CURRENT_BRANCH" -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ feature –≤–µ—Ç–∫–µ
if (-not $CURRENT_BRANCH.StartsWith("feature/")) {
    Write-Host "‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –í—ã –Ω–µ –≤ feature –≤–µ—Ç–∫–µ!" -ForegroundColor Yellow
    Write-Host "üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –≤–µ—Ç–∫–µ feature/your-feature-name" -ForegroundColor Cyan
    $response = Read-Host "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N)"
    if ($response -ne "y" -and $response -ne "Y") {
        Write-Host "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞" -ForegroundColor Red
        exit 1
    }
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å git
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..." -ForegroundColor Blue
$gitStatus = git status --porcelain

if ([string]::IsNullOrEmpty($gitStatus)) {
    Write-Host "‚úÖ –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞" -ForegroundColor Green
} else {
    Write-Host "üìù –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è:" -ForegroundColor Yellow
    Write-Host $gitStatus -ForegroundColor Gray
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
    Write-Host "üì¶ –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è..." -ForegroundColor Blue
    git add -A
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞
    $commitMessage = Read-Host "üí¨ –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞"
    if ([string]::IsNullOrEmpty($commitMessage)) {
        $commitMessage = "feat: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∫–æ–º–º–∏—Ç $(Get-Date -Format 'yyyy-MM-dd HH:mm')"
    }
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
    Write-Host "üíæ –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç..." -ForegroundColor Blue
    git commit -m $commitMessage
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ö–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–º–∏—Ç–∞" -ForegroundColor Red
        exit 1
    }
}

# –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
Write-Host "üì• –ü–æ–ª—É—á–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..." -ForegroundColor Blue
git fetch origin

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≤–µ—Ç–∫–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
$remoteBranchExists = $false
try {
    git rev-parse --verify "origin/$CURRENT_BRANCH" 2>$null
    $remoteBranchExists = $true
} catch {
    $remoteBranchExists = $false
}

if ($remoteBranchExists) {
    Write-Host "üîÑ –í–µ—Ç–∫–∞ $CURRENT_BRANCH —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏" -ForegroundColor Yellow
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–∞–∑–ª–∏—á–∏—è
    $LOCAL_COMMIT = git rev-parse HEAD
    $REMOTE_COMMIT = git rev-parse "origin/$CURRENT_BRANCH"
    
    if ($LOCAL_COMMIT -ne $REMOTE_COMMIT) {
        Write-Host "‚ö†Ô∏è  –õ–æ–∫–∞–ª—å–Ω–∞—è –≤–µ—Ç–∫–∞ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —É–¥–∞–ª–µ–Ω–Ω–æ–π" -ForegroundColor Yellow
        Write-Host "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º rebase..." -ForegroundColor Blue
        git rebase "origin/$CURRENT_BRANCH"
        
        if ($LASTEXITCODE -ne 0) {
            Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ rebase. –†–∞–∑—Ä–µ—à–∏—Ç–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –≤—Ä—É—á–Ω—É—é" -ForegroundColor Red
            exit 1
        }
    }
} else {
    Write-Host "üÜï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ç–∫—É –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏" -ForegroundColor Green
}

# –ü—É—à–∏–º –≤ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
Write-Host "üöÄ –ü—É—à–∏–º –≤ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..." -ForegroundColor Blue
if ($remoteBranchExists) {
    git push origin $CURRENT_BRANCH
} else {
    git push -u origin $CURRENT_BRANCH
}

if ($LASTEXITCODE -eq 0) {
    Write-Host "‚úÖ –ü—É—à –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor Green
} else {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É—à–µ" -ForegroundColor Red
    exit 1
}

# –ó–∞–ø—É—Å–∫–∞–µ–º CI/CD –ø–∞–π–ø–ª–∞–π–Ω (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω)
Write-Host "üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º CI/CD –ø–∞–π–ø–ª–∞–π–Ω..." -ForegroundColor Blue

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ GitHub Actions
if (Test-Path ".github/workflows") {
    Write-Host "üìã –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã GitHub Actions workflows" -ForegroundColor Green
    
    # –ü–æ–ª—É—á–∞–µ–º URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    $remoteUrl = git remote get-url origin
    if ($remoteUrl -match "github\.com[:/]([^/]+)/([^/]+?)(?:\.git)?$") {
        $owner = $matches[1]
        $repo = $matches[2]
        $workflowUrl = "https://github.com/$owner/$repo/actions"
        
        Write-Host "üîó –û—Ç–∫—Ä—ã–≤–∞–µ–º GitHub Actions: $workflowUrl" -ForegroundColor Cyan
        Start-Process $workflowUrl
    }
} else {
    Write-Host "‚ö†Ô∏è  GitHub Actions –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã" -ForegroundColor Yellow
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥—Ä—É–≥–∏–µ CI/CD —Å–∏—Å—Ç–µ–º—ã
if (Test-Path "azure-pipelines.yml") {
    Write-Host "üîµ –û–±–Ω–∞—Ä—É–∂–µ–Ω Azure DevOps pipeline" -ForegroundColor Blue
}

if (Test-Path ".gitlab-ci.yml") {
    Write-Host "ü¶ä –û–±–Ω–∞—Ä—É–∂–µ–Ω GitLab CI" -ForegroundColor Orange
}

if (Test-Path "Jenkinsfile") {
    Write-Host "üîß –û–±–Ω–∞—Ä—É–∂–µ–Ω Jenkins pipeline" -ForegroundColor DarkBlue
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ—Ç–∫–µ
Write-Host "`nüìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ç–∫–µ:" -ForegroundColor Cyan
Write-Host "   –í–µ—Ç–∫–∞: $CURRENT_BRANCH" -ForegroundColor White
Write-Host "   –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç: $(git log -1 --pretty=format:'%h - %s (%cr)')" -ForegroundColor White
Write-Host "   –ê–≤—Ç–æ—Ä: $(git log -1 --pretty=format:'%an <%ae>')" -ForegroundColor White

Write-Host "`nüéâ –ì–æ—Ç–æ–≤–æ! –ö–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ feature –≤–µ—Ç–∫—É –∏ CI/CD –∑–∞–ø—É—â–µ–Ω" -ForegroundColor Green
Write-Host "üí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Cyan
Write-Host "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –ø–∞–π–ø–ª–∞–π–Ω–∞ –≤ GitHub Actions" -ForegroundColor White
Write-Host "   2. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ —Å–æ–∑–¥–∞–π—Ç–µ Pull Request" -ForegroundColor White
Write-Host "   3. –ü—Ä–æ–≤–µ–¥–∏—Ç–µ code review" -ForegroundColor White
Write-Host "   4. –ü–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ merge –≤ main –≤–µ—Ç–∫—É" -ForegroundColor White
