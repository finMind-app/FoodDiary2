//
//  FoodRecognitionViewModel.swift
//  FoodDiaryTwo
//
//  Created by user on 31.07.2025.
//

import Foundation
import SwiftUI

// MARK: - ViewModel –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –µ–¥—ã
@MainActor
class FoodRecognitionViewModel: ObservableObject {
    
    // MARK: - Published —Å–≤–æ–π—Å—Ç–≤–∞
    @Published var selectedImage: UIImage?
    @Published var recognitionResult: FoodRecognitionResult?
    @Published var isProcessing = false
    @Published var processingProgress: Double = 0.0
    @Published var errorMessage: String?
    @Published var showError = false
    
    // MARK: - –°–µ—Ä–≤–∏—Å—ã
    private let recognitionService: FoodRecognitionServiceProtocol
    
    // MARK: - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init(recognitionService: FoodRecognitionServiceProtocol = FoodRecognitionService()) {
        self.recognitionService = recognitionService
    }
    
    // MARK: - –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    
    /// –í—ã–±–æ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –≥–∞–ª–µ—Ä–µ–∏
    func selectImage() {
        // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Ç–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ AddMealView —á–µ—Ä–µ–∑ PhotosPicker
        print("Image selection handled by PhotosPicker")
    }
    
    /// –°–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ
    func takePhoto() {
        // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ —Ç–µ–ø–µ—Ä—å –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ AddMealView —á–µ—Ä–µ–∑ ImagePicker
        print("Camera capture handled by ImagePicker")
    }
    
    /// –†–∞—Å–ø–æ–∑–Ω–∞—Ç—å –µ–¥—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
    func recognizeFood() async {
        print("üîç –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –µ–¥—ã...")
        print("üì∏ selectedImage: \(selectedImage != nil ? "—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ" : "–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")")
        
        guard let image = selectedImage else {
            print("‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ")
            showError(message: "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ")
            return
        }
        
        print("‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ, —Ä–∞–∑–º–µ—Ä: \(image.size)")
        isProcessing = true
        processingProgress = 0.0
        errorMessage = nil
        
        do {
            print("üöÄ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...")
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å —Å OpenRouter API
            let result = try await recognitionService.recognizeFood(from: image)
            
            print("‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            recognitionResult = result
            isProcessing = false
            processingProgress = 1.0
            
        } catch let error as FoodRecognitionError {
            print("‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è: \(error.localizedDescription)")
            isProcessing = false
            processingProgress = 0.0
            showError(message: error.localizedDescription)
            
        } catch {
            print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: \(error.localizedDescription)")
            isProcessing = false
            processingProgress = 0.0
            showError(message: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: \(error.localizedDescription)")
        }
    }
    
    /// –°–±—Ä–æ—Å–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    func resetResults() {
        recognitionResult = nil
        selectedImage = nil
        errorMessage = nil
        showError = false
        processingProgress = 0.0
    }
    
    /// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    func setImage(_ image: UIImage) {
        selectedImage = image
        resetResults() // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    }
    
    // MARK: - –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    
    private func showError(message: String) {
        errorMessage = message
        showError = true
    }
}
